// void метод не возвращает значения. Есть методы, которые возвращают значения.
// Поэтому в коде не используем оператор return, который был в поиске максимума из трех

// 1-ый метод
// используем метод, чтобы заполнить массив числами
// FillArray - наименование метода, collection  - аргумент
void FillArray(int[] collection)
{
// получаем длину массива с помощью collection.Length
    int length = collection.Length;
    int index = 0; // изначально индекс равен 0
    while (index < length)
    {
        // обратиться к аргументу collection на позицию index и положить туда новое случайное целое число из диапазона (1, 10)
        collection[index] = new Random().Next(1, 10);
        //index = index +1;
        index++; // тоже самое в языке C#
    }
}
// 2-й метод
// теперь сделаем void, который будет печатать массив
// можно давать различные имена аргументам, здесь дали col
void PrintArray(int[] col)
{
    int count = col.Length; // обозначаем кол-во элементов
    int position = 0; // позицию обозначаем через наименование position, ранее именовать через [index]
    while (position < count)
    {
        Console.WriteLine(col[position]);
        position++;
    }
}

// создай новый массив, в котором будет 10 элементов, конструкция справа. По умолчанию он будет заполнен нулями.
int [] array = new int [10]; // определили массив из 10 элементов

// находим позицию нужного элемента в массиве с использованием метода
// опишем метод отличный от void, он будет возвращать позицию index значит integer
// назовем метод Index0f
// в качесвте аргумента будет приходить массив collection и какой-то элемент find
int Index0f(int[] collection, int find)
{
    int count = collection.Length; // определем кол-во элементов count
    int index = 0;
    int position = -1; // ставим позицию -1 на случай если элемент find не будет найден, тогда код выдаст на экране -1
    // int position = 0; // нужно будет куда-то положить переменную, создаем и сохраним новуую переменную position 
    while (index < count)
    {
        if(collection[index] == find)
        {
            position = index;
            break; // добавлем этот опеатор, чтобы выводил индекс первого значения, если в массиве будет две четверки
        }
        index++;
    }
    return position; // возвращаем перменную с новым значением
}

// тестируем методы
FillArray(array); // метод заполнит массив числами. 
array[4] = 4; // принудительно добавили пару четверок, чтобы проверить оператор break, можно этого не делать 
array[6] = 4;
PrintArray(array); // метод, который напечатает наш массив. 
Console.WriteLine(); // здесь создаем пустую строчку Console.WriteLine(); чтобы быть уверенными что не явяется частью вывода массива

// определим пересменную pos чтобы в нее положить результат вывода массива Index0f
// в качестве аргумента будет передаваться массив array, будем искать 4
int pos = Index0f(array, 4);
Console.WriteLine(pos);